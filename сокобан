#include <ncurses.h>
#define n 10
#define m 10
//gcc nc.c -lncurses
//fopen//freopen
int main(){
	int a[n][m], i, j, flag, ch, x, y;
	
	//massiv dly poly!!!!!!!!!!!!	!!!!!!!
	for (i=0; i<n; i++){
		for (j=0; j<m; j++){
			if (i==0 || i==n-1 || j==0 || j==n-1)
				a[i][j]=3;
			else
				a[i][j]=0;
		}
	}
	a[5][5]=1;
	a[2][2]=2;
	a[8][2]=4;
	a[2][7]=2;
	a[8][7]=4;
	//!!!!!!!!!!!!!!!!!!!!!!!!!!!	!!!!!!!
	initscr();//РЅР°С‡Р°Р»Рѕ ncurses
	curs_set(0);//СѓР±РёСЂР°РµС‚ РєСѓСЂСЃРѕСЂ
	while(ch!='Q'){
		flag=0;
		//СѓСЃР»РѕРІРёРµ game over
		for (i = 0; i < n; i++){
			for (j = 0; j < m; j++){
				if (a[i][j]==2){
					x=0;y=0;
					if (a[i][j+1]==2 || a[i][j-1]==2 || a[i][j+1]==3 || a[i][j-1]==3)
						x+=1;
					if (a[i+1][j]==2 || a[i-1][j]==2 || a[i+1][j]==3 || a[i-1][j]==3)
						y+=1;
					if (y!=0 && x!=0){
	clear();//РѕС‡РёСЃС‚РєР° СЌРєСЂР°РЅР°
	
						printw("GAME OVER\n");
getch();
endwin();//РєРѕРЅРµС† ncurses
return 0;
	
					}
				}
			}
		}
		//РїРµСЂС‡Р°С‚СЊ
			for (i=0; i<n; i++){
				for (j=0; j<m; j++){
					if (a[i][j]==0)
						printw(" ");
					if (a[i][j]==1)
						printw("P");
					if (a[i][j]==2)
						printw("O");
					if (a[i][j]==3)
						printw("*");
					if (a[i][j]==4)
						printw("X");
					if (a[i][j]==5)
						printw("o");
				}
			printw("\n");
		}
		//РїРµСЂРµРґРІРёР¶РµРЅРёРµ
		ch=getch();
		switch (ch) {
			
			case 'w':
			case 'W':{
				for (int i=0; i<n; i++){
					for (int j=0; j<m; j++){
						if (a[i][j]==1 && a[i-1][j]==0){
							a[i][j]=0;
							a[i-1][j]=1;
						}
						else
							if (a[i][j]==1 && a[i-1][j]==2 && a[i-2][j]==0){
								a[i][j]=0;
								a[i-1][j]=1;
								a[i-2][j]=2;
							}
							else 
								if (a[i][j]==1 && a[i-1][j]==2 && a[i-2][j]==4){
									a[i][j]=0;
									a[i-1][j]=1;
									a[i-2][j]=5;
								}
						
					}
				}
				break;
			}
			case 's':
			case 'S':{
				for (i=0; i<n; i++){
					for (j=0; j<m; j++){
						if (a[i][j]==1 && a[i+1][j]==0){
							a[i][j]=0;
							a[i+1][j]=1;
							flag=1;
						}
						else
							if (a[i][j]==1 && a[i+1][j]==2 && a[i+2][j]==0){
								a[i][j]=0;
								a[i+1][j]=1;
								a[i+2][j]=2;
								flag=1;
							}
							else 
								if (a[i][j]==1 && a[i+1][j]==2 && a[i+2][j]==4){
									a[i][j]=0;
									a[i+1][j]=1;
									a[i+2][j]=5;
									flag=1;
								}
						if (flag==1)break;
					}
				}
				break;
			}
			case 'a':
			case 'A':{
				for (i=0; i<n; i++){
					for (j=0; j<m; j++){
						if (a[i][j]==1 && a[i][j-1]==0){
							a[i][j]=0;
							a[i][j-1]=1;
						}
						else
							if (a[i][j]==1 && a[i][j-1]==2 && a[i][j-2]==0){
								a[i][j]=0;
								a[i][j-1]=1;
								a[i][j-2]=2;
							}
							else 
								if (a[i][j]==1 && a[i][j-1]==2 && a[i][j-2]==4){
									a[i][j]=0;
									a[i][j-1]=1;
									a[i][j-2]=5;
								}
					}
				}
				break;
			}
			case 'd':
			case 'D':{
				for (i=0; i<n; i++){
					for (j=0; j<m; j++){
						if (a[i][j]==1 && a[i][j+1]==0){
							a[i][j]=0;
							a[i][j+1]=1;
							flag=1;
						}
						else
							if (a[i][j]==1 && a[i][j+1]==2 && a[i][j+2]==0){
								a[i][j]=0;
								a[i][j+1]=1;
								a[i][j+2]=2;
								flag=1;
							}
							else 
								if (a[i][j]==1 && a[i][j+1]==2 && a[i][j+2]==4){
									a[i][j]=0;
									a[i][j+1]=1;
									a[i][j+2]=5;
									flag=1;
								}
						if (flag==1)break;
					}
				}
				break;
			}
			default:{
			}
		}
		
	clear();//РѕС‡РёСЃС‚РєР° СЌРєСЂР°РЅР°
	refresh();//РІС‹РІРѕРґ РЅР° СЌРєСЂР°РЅ
		
	}
	endwin();//РєРѕРЅРµС† ncurses
	return 0;
}
